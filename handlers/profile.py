"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
"""
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from core.database import db
from core.config import IMAGE_PATHS


async def send_start_menu(chat_id, context, user):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é —Å —Ñ–æ—Ç–æ –∏ –∫–Ω–æ–ø–∫–∞–º–∏"""
    # Inline-–∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
    keyboard = [
        [InlineKeyboardButton("üßæ –ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è?", callback_data="start_profile")],
        [InlineKeyboardButton("üîÆ –ß—Ç–æ —è —É–º–µ—é", callback_data="about")],
                    [InlineKeyboardButton("üíå –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∞–≤—Ç–æ—Ä–∞", url="https://t.me/N_W_passage/3")],
        [InlineKeyboardButton("üíé –î–æ–Ω–∞—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ", callback_data="donate")],
        [InlineKeyboardButton("üåô –†–∞–∑–æ–±—Ä–∞—Ç—å –º–æ–π —Å–æ–Ω", callback_data="start_first_dream")],
        [InlineKeyboardButton("üìñ –î–Ω–µ–≤–Ω–∏–∫ —Å–Ω–æ–≤", callback_data="diary_page:0")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Ñ–æ—Ç–æ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    try:
        with open(IMAGE_PATHS["intro"], "rb") as photo:
            await context.bot.send_photo(
                chat_id=chat_id,
                photo=photo,
                caption=(
                    "üí´ –°–Ω—ã ‚Äì —ç—Ç–æ —è–∑—ã–∫ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ. "
                    "–ò–Ω–æ–≥–¥–∞ –æ–Ω–æ —à–µ–ø—á–µ—Ç, –∏–Ω–æ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–∂–Ω–æ–µ —á–µ—Ä–µ–∑ –æ–±—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞. "
                    "–ù–æ –∑–∞ –∫–∞–∂–¥—ã–º —Å–Ω–æ–º ‚Äì —á—Ç–æ-—Ç–æ –æ—á–µ–Ω—å –ª–∏—á–Ω–æ–µ, —á—Ç–æ-—Ç–æ —Ç–æ–ª—å–∫–æ –ø—Ä–æ —Ç–µ–±—è."
                ),
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
    except FileNotFoundError:
        await context.bot.send_message(
            chat_id=chat_id,
            text=(
                "üí´ –°–Ω—ã ‚Äì —ç—Ç–æ —è–∑—ã–∫ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ. "
                "–ò–Ω–æ–≥–¥–∞ –æ–Ω–æ —à–µ–ø—á–µ—Ç, –∏–Ω–æ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞–∂–Ω–æ–µ —á–µ—Ä–µ–∑ –æ–±—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞. "
                "–ù–æ –∑–∞ –∫–∞–∂–¥—ã–º —Å–Ω–æ–º ‚Äì —á—Ç–æ-—Ç–æ –æ—á–µ–Ω—å –ª–∏—á–Ω–æ–µ, —á—Ç–æ-—Ç–æ —Ç–æ–ª—å–∫–æ –ø—Ä–æ —Ç–µ–±—è."
            ),
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    from core.config import MAIN_MENU
    
    chat_id = update.effective_chat.id
    user = update.effective_user

    # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ —Å—Ç–∞—Ä—Ç–æ–≤
    db.log_activity(user, str(chat_id), "start")
    db.increment_start_count(user, str(chat_id))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω–æ–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
    await send_start_menu(chat_id, context, user)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é —Å–Ω–∏–∑—É
    await update.message.reply_text(
        text="–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏ —Å–≤–æ–π —Å–æ–Ω –∏ —è –Ω–∞—á–Ω—É —Ç—Ä–∞–∫—Ç–æ–≤–∞–Ω–∏–µ",
        reply_markup=MAIN_MENU
    )


async def handle_profile_callbacks(update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ—Ñ–∏–ª–µ–º"""
    query = update.callback_query
    chat_id = str(update.effective_chat.id)
    user = update.effective_user
    
    if callback_data == "start_profile":
        try:
            with open(IMAGE_PATHS["quiz"], "rb") as photo:
                await context.bot.send_photo(
                    chat_id=query.message.chat_id,
                    photo=photo,
                    caption="üßæ –í—Å–µ–≥–æ 3 –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –º–Ω–µ –ª—É—á—à–µ —Ç—Ä–∞–∫—Ç–æ–≤–∞—Ç—å —Ç–≤–æ–∏ —Å–Ω—ã.\n\n–ù–∞—á–Ω—ë–º?",
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("–ù–∞—á–∏–Ω–∞–µ–º", callback_data="profile_step:gender")],
                        [InlineKeyboardButton("–î–∞–≤–∞–π –Ω–µ —Å–µ–π—á–∞—Å", callback_data="profile_step:skip")]
                    ])
                )
        except FileNotFoundError:
            await query.message.reply_text(
                "üßæ –í—Å–µ–≥–æ 3 –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –º–Ω–µ –ª—É—á—à–µ —Ç—Ä–∞–∫—Ç–æ–≤–∞—Ç—å —Ç–≤–æ–∏ —Å–Ω—ã.\n\n–ù–∞—á–Ω—ë–º?",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–ù–∞—á–∏–Ω–∞–µ–º", callback_data="profile_step:gender")],
                    [InlineKeyboardButton("–î–∞–≤–∞–π –Ω–µ —Å–µ–π—á–∞—Å", callback_data="profile_step:skip")]
                ])
            )
    
    elif callback_data == "profile_step:gender":
        context.user_data['profile_step'] = "gender"
        await query.message.reply_text(
            "–°–∏–º–≤–æ–ª–∏–∫–∞ —Å–Ω–æ–≤ —É –∂–µ–Ω—â–∏–Ω –∏ –º—É–∂—á–∏–Ω –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è. –¢—ã:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ñ–µ–Ω—â–∏–Ω–∞", callback_data="gender:female")],
                [InlineKeyboardButton("–ú—É–∂—á–∏–Ω–∞", callback_data="gender:male")],
                [InlineKeyboardButton("–ù–µ —Å–∫–∞–∂—É", callback_data="gender:other")]
            ])
        )
    
    elif callback_data == "profile_step:skip":
        await query.message.reply_text("–•–æ—Ä–æ—à–æ! –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∞–Ω–∫–µ—Ç–µ –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start.")
    
    elif callback_data.startswith("gender:"):
        gender = callback_data.split(":")[1]
        context.user_data['gender'] = gender
        context.user_data['profile_step'] = "age"

        await query.message.reply_text(
            "–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç —Ç–æ–∂–µ –≤–∞–∂–µ–Ω –¥–ª—è —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–î–æ 18", callback_data="age:<18")],
                [InlineKeyboardButton("18‚Äì30", callback_data="age:18-30")],
                [InlineKeyboardButton("31‚Äì50", callback_data="age:31-50")],
                [InlineKeyboardButton("50+", callback_data="age:50+")]
            ])
        )
    
    elif callback_data.startswith("age:"):
        age = callback_data.split(":")[1]
        context.user_data['age_group'] = age
        context.user_data['profile_step'] = "lucid"

        await query.message.reply_text(
            "–ë—ã–≤–∞—é—Ç –ª–∏ —É —Ç–µ–±—è –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ —Å–Ω—ã (–ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —Å–ø–∏—à—å –∏ –º–æ–∂–µ—à—å –≤–ª–∏—è—Ç—å –Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–µ –≤–æ —Å–Ω–µ)?",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ß–∞—Å—Ç–æ", callback_data="lucid:—á–∞—Å—Ç–æ")],
                [InlineKeyboardButton("–ò–Ω–æ–≥–¥–∞", callback_data="lucid:–∏–Ω–æ–≥–¥–∞")],
                [InlineKeyboardButton("–ù–∏–∫–æ–≥–¥–∞", callback_data="lucid:–Ω–∏–∫–æ–≥–¥–∞")]
            ])
        )
    
    elif callback_data.startswith("lucid:"):
        lucid = callback_data.split(":")[1]
        context.user_data['lucid_dreaming'] = lucid
        context.user_data['profile_step'] = None

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ –ë–î
        db.save_user_profile(
            chat_id=chat_id,
            username=f"@{user.username}" if user.username else None,
            gender=context.user_data.get('gender'),
            age_group=context.user_data.get('age_group'),
            lucid_dreaming=lucid
        )

        await query.message.reply_text(
            "‚úÖ –°–ø–∞—Å–∏–±–æ!\n–¢–µ–ø–µ—Ä—å —è —Å–º–æ–≥—É —É—á–∏—Ç—ã–≤–∞—Ç—å —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å–Ω–æ–≤.",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üåô –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Å–æ–Ω", callback_data="start_first_dream")]
            ])
        )


async def handle_info_callbacks(update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö callback'–æ–≤"""
    query = update.callback_query
    
    if callback_data == "about":
        try:
            with open(IMAGE_PATHS["about"], "rb") as photo:
                await context.bot.send_photo(
                    chat_id=query.message.chat_id,
                    photo=photo,
                    caption=(
                        "–Ø ‚Äì —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å —Å–≤–æ–∏ —Å–Ω—ã. –ú–æ—è –æ—Å–Ω–æ–≤–∞ ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑, –ø—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ –º–µ—Ç–æ–¥–∏–∫–∞ –ö–∞—Ä–ª–∞ –Æ–Ω–≥–∞. "
                        "–ú–Ω–µ –º–æ–∂–Ω–æ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ª—é–±–æ–π —Å–æ–Ω ‚Äì –¥–∞–∂–µ —Å–∞–º—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π, –∑–∞–ø—É—Ç–∞–Ω–Ω—ã–π –∏–ª–∏ –Ω–µ–æ–±—ã—á–Ω—ã–π ‚Äì –∏ —É–∑–Ω–∞—Ç—å, —á—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ —Ç–≤–æ—ë –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ.\n\n"
                        "–Ø –±–µ—Ä–µ–∂–Ω–æ –ø–æ–º–æ–≥–∞—é, –Ω–µ –æ—Å—É–∂–¥–∞—é –∏ –Ω–µ –¥–∞—é –≥–æ—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤, –Ω–µ –Ω–∞–≤—è–∑—ã–≤–∞—é —Å–º—ã—Å–ª–æ–≤. –Ø –ø—Ä–æ—Å—Ç–æ —Ä—è–¥–æ–º ‚Äî —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —á—É—Ç—å –±–ª–∏–∂–µ –ø–æ–¥–æ–π—Ç–∏ –∫ —Å–µ–±–µ, "
                        "–∫ —Å–≤–æ–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –∑–Ω–∞–Ω–∏—é, –∫ —Ç–æ–º—É, —á—Ç–æ –æ–±—ã—á–Ω–æ –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —Ç–µ–Ω–∏.\n\n"
                        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
                        "üåô –¢–æ–ª–∫—É—é —Å–Ω—ã —Å –æ–ø–æ—Ä–æ–π –Ω–∞ –æ–±—Ä–∞–∑—ã, –∞—Ä—Ö–µ—Ç–∏–ø—ã –∏ —Å–∏–º–≤–æ–ª—ã\n"
                        "üí¨ –£—á–∏—Ç—ã–≤–∞—é —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç–µ–±–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ ‚Äì –∫—Ä–∞—Ç–∫–æ –∏–ª–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ, —Å–µ—Ä—å—ë–∑–Ω–æ –∏–ª–∏ —Å –ª—ë–≥–∫–æ—Å—Ç—å—é\n"
                        "ü¶Ñ –ú–æ–≥—É –æ–±—Å—É–¥–∏—Ç—å —Å —Ç–æ–±–æ–π —Å–∏–º–≤–æ–ª–∏–∫—É —Å–Ω–∞ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n"
                        "ü™ê–ü–æ –∑–∞–ø—Ä–æ—Å—É ‚Äì —É—á–∏—Ç—ã–≤–∞—é –¥–∞—Ç—É –∏ –º–µ—Å—Ç–æ —Å–Ω–∞, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –∏—Å—Ö–æ–¥—è –∏–∑ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–ª–∞–Ω–µ—Ç –≤ —ç—Ç–æ –≤—Ä–µ–º—è\n"
                        "üïäÔ∏è–ì–æ–≤–æ—Ä—é —Å —Ç–æ–±–æ–π –±–µ—Ä–µ–∂–Ω–æ –∏ –ø–æ–º–æ–≥–∞—é –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ —Å–æ–Ω, –∫–∞–∫ –Ω–∞ –ø—É—Ç—å –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é —Å–µ–±—è\n\n"
                        "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äì –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—Å–∫–∞–∂–∏ —Å–≤–æ–π —Å–æ–Ω. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–ª—É—à–∞—Ç—å –∏ –∏—Å—Ç–æ–ª–∫–æ–≤—ã–≤–∞—Ç—å"
                    ),
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("üåô –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Å–æ–Ω", callback_data="start_first_dream")]
                    ])
                )
        except FileNotFoundError:
            await query.message.reply_text(
                "–Ø ‚Äì —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å —Å–≤–æ–∏ —Å–Ω—ã...",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("üåô –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Å–æ–Ω", callback_data="start_first_dream")]
                ])
            )
    
    elif callback_data == "donate":
        from core.config import LINKS
        
        try:
            with open(IMAGE_PATHS["donate"], "rb") as photo:
                await context.bot.send_photo(
                    chat_id=query.message.chat_id,
                    photo=photo,
                    caption="üí∞–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç! –£ –Ω–∞—Å –µ—â—ë –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏–¥–µ–π –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏!",
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å!", url=LINKS["donation"])]
                    ])
                )
        except FileNotFoundError:
            await query.message.reply_text(
                "üí∞–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç! –£ –Ω–∞—Å –µ—â—ë –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏–¥–µ–π –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏!",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å!", url=LINKS["donation"])]
                ])
            )
    
    elif callback_data == "start_first_dream":
        await query.message.reply_text(
            "‚ú® –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ —Å–≤–æ–π —Å–æ–Ω, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω —Å—Ç—Ä–∞–Ω–Ω—ã–π, –∑–∞–ø—É—Ç–∞–Ω–Ω—ã–π –∏–ª–∏ –ø—É–≥–∞—é—â–∏–π ‚Äì —Ç–∞–∫ –ø–æ–¥—Ä–æ–±–Ω–æ, –∫–∞–∫ –º–æ–∂–µ—à—å. "
            "–û–ø–∏—à–∏, –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∏ —ç–º–æ—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ–≥–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–ª–∏. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —è —É—á—ë–ª –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç –≤ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–∏ ‚Äì "
            "—É–∫–∞–∂–∏ –¥–∞—Ç—É –∏ –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –º–µ—Å—Ç–æ —Å–Ω–∞ (–º–æ–∂–Ω–æ –ø–æ –±–ª–∏–∂–∞–π—à–µ–º—É –∫—Ä—É–ø–Ω–æ–º—É –≥–æ—Ä–æ–¥—É)"
        )
