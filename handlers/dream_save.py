"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–Ω–æ–≤ –≤ –¥–Ω–µ–≤–Ω–∏–∫
"""
import logging
from core.utils import cleanup_astrological_interface
from core.error_handler import handle_errors, validate_pending_dream, safe_callback_data_split, DatabaseError

logger = logging.getLogger(__name__)


@handle_errors("dream_save")
async def handle_save_dream_callback(update, context, callback_data):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫ —Å–Ω–æ–≤'"""
    query = update.callback_query
    chat_id = str(query.message.chat_id)
    user = update.effective_user
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–Ω–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –≤ –ë–î
    from core.database import db
    
    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    parts = safe_callback_data_split(callback_data, 2)
    source_type = parts[1]
    
    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ pending_dream
    pending_dream = await validate_pending_dream(db, chat_id)
    logger.info(f"üîç DEBUG: pending_dream –∏–∑ –ë–î = {pending_dream}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
    has_astrological = pending_dream.get('astrological_interpretation') is not None
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–Ω –≤ –¥–Ω–µ–≤–Ω–∏–∫
    dream_saved = await save_dream_to_diary(
        db, chat_id, pending_dream, source_type, has_astrological
    )
    
    if not dream_saved:
        raise DatabaseError(f"Failed to save dream for chat_id: {chat_id}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    save_message = _get_save_confirmation_message(has_astrological)
    
    # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    db.log_activity(user, chat_id, "dream_saved_to_diary", f"type:{source_type}, astrological:{has_astrological}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await query.answer(save_message)
    
    # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –¥–∞—Ç—ã
    await cleanup_interface_after_save(context, chat_id, query.message.text)
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    db.delete_pending_dream(chat_id)


async def save_dream_to_diary(db, chat_id, pending_dream, source_type, has_astrological):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–Ω –≤ –¥–Ω–µ–≤–Ω–∏–∫
    
    Args:
        db: Database instance
        chat_id: ID —á–∞—Ç–∞
        pending_dream: –î–∞–Ω–Ω—ã–µ —Å–Ω–∞
        source_type: –¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        has_astrological: –ï—Å—Ç—å –ª–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
    
    Returns:
        bool: True –µ—Å–ª–∏ —Å–æ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω
    """
    try:
        if has_astrological:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –û–î–ò–ù —Å–æ–Ω —Å –û–ë–û–ò–ú–ò —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è–º–∏
            return db.save_dream(
                chat_id=chat_id,
                dream_text=pending_dream['dream_text'],
                interpretation=pending_dream['interpretation'],  # –û–±—ã—á–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
                source_type=source_type,
                astrological_interpretation=pending_dream['astrological_interpretation']  # –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
            )
        else:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–Ω —Ç–æ–ª—å–∫–æ —Å –æ–±—ã—á–Ω—ã–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ–º
            return db.save_dream(
                chat_id=chat_id,
                dream_text=pending_dream['dream_text'],
                interpretation=pending_dream['interpretation'],
                source_type=source_type
            )
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–Ω–∞ –≤ –ë–î: {e}")
        return False


def _get_save_confirmation_message(has_astrological):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    
    Args:
        has_astrological: –ï—Å—Ç—å –ª–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
    
    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    if has_astrological:
        return "‚úÖ –°–æ–Ω —Å –æ–±—ã—á–Ω—ã–º –∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –¥–Ω–µ–≤–Ω–∏–∫!"
    else:
        return "‚úÖ –°–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –¥–Ω–µ–≤–Ω–∏–∫!"


async def cleanup_interface_after_save(context, chat_id, current_message_text):
    """
    –û—á–∏—â–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–Ω–∞
    
    Args:
        context: Telegram context
        chat_id: ID —á–∞—Ç–∞
        current_message_text: –¢–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    try:
        # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –¥–∞—Ç—ã
        await cleanup_astrological_interface(context, chat_id, current_message_text)
        logger.info(f"üîç DEBUG: –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—á–∏—â–µ–Ω –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–Ω–∞")
        
    except Exception as e:
        logger.error(f"üîç DEBUG: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
